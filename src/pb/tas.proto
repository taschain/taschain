syntax = "proto2";
package tas.pb;

message Message{

    required uint32 Code  = 1;

    optional bytes Signature  = 2;

    optional bytes Body  = 3;

}


message Transaction{

    required bytes Data  = 1 ;

    optional uint64 Value = 2;

    required uint64 Nonce = 3;

    required bytes Source  = 4 ;

    optional bytes Target  = 5 ;

    required uint64 GasLimit = 6;

    required uint64 GasPrice = 7;

    required bytes Hash  = 8 ;

    optional bytes ExtraData  = 9 ;

    optional int32 ExtraDataType  = 10 ;
}

message TransactionRequestMessage{

    repeated bytes TransactionHashes = 1;

    required bytes SourceId = 2;

    required bytes RequestTime = 3;
}

message TransactionSlice{

    repeated Transaction transactions = 1;
}


message BlockHeader{

     optional bytes Hash  = 1 ;

     optional uint64 Height = 2;

     optional bytes PreHash  = 3 ;

     optional bytes PreTime  = 4 ;

     optional uint64 QueueNumber = 5;

     optional uint64 TotalQN = 6;

     optional bytes CurTime  = 7 ;

     optional bytes Castor  = 8 ;

     optional bytes GroupId  = 9 ;

     optional bytes Signature  = 10 ;

     optional uint64 Nonce = 11;

     optional Hashes transactions = 12;

     optional bytes TxTree  = 13 ;

     optional bytes ReceiptTree  = 14 ;

     optional bytes StateTree  = 15 ;

     optional bytes ExtraData  = 16 ;

     optional Hashes EvictedTxs  = 17;
}

message Block{
    required BlockHeader Header = 1;

    repeated Transaction transactions = 2;

}


message BlockSlice{
    repeated Block Blocks = 1;
}




message Member{

    required bytes Id = 1;

    required bytes PubKey  = 2 ;
}

message Group{

    optional  bytes Id   = 1;

	repeated  Member Members  = 2;

	optional  bytes PubKey = 3;

	optional  bytes Parent = 4;

	optional  bytes Dummy = 5;

	optional  bytes Signature  = 6;
}

message GroupSlice{
    repeated Group Groups = 1;
}


message EntityRequestMessage{

	required uint64 SourceHeight  =1;

	required bytes SourceCurrentHash =2;

	required bytes SourceId =3;
}


message Hashes{

    repeated bytes hashes = 1;
}

message ChainBlockHash{

	required  uint64 Height = 1;

	required  bytes  Hash = 2;
}

message ChainBlockHashSlice{

    repeated ChainBlockHash ChainBlockHashes = 1;
}

message BlockMessage{

	optional BlockSlice Blocks = 1;

	optional ChainBlockHashSlice ChainBlockHash = 2;
}

message EntityTotalQNMessage{

	required uint64 TotalQN = 1;

	required bytes SourceId = 2;
}

message ChainBlockHashesReq{

	required  uint64 Height = 1;

	required uint64 Length = 2;
}

message GroupMessage{

	optional GroupSlice Groups = 1;

	optional uint64 Height = 2;

    optional bytes  Hash = 3;
}



message SignData{

	required  bytes DataHash  = 1;

	required  bytes DataSign = 2;

	required  bytes SignMember= 3;
}



message ConsensusGroupInitSummary{

    required  bytes ParentID  = 1;

	required  uint64  Authority = 2;

	required  bytes   Name = 3;

	required  bytes   DummyID = 4;

	required bytes    BeginTime =5;
}

message PubKeyInfo{

      required bytes ID = 1;

      required bytes PublicKey = 2;
}


message ConsensusGroupRawMessage{
    required ConsensusGroupInitSummary ConsensusGroupInitSummary = 1;

    repeated  PubKeyInfo Ids  = 2;

    required SignData sign = 3;

}

message SharePiece {
     required bytes Seckey = 1;

    required bytes Pubkey = 2;
}

message ConsensusSharePieceMessage{
    required bytes GISHash = 1;

    required bytes DummyID = 2;

    required bytes Dest = 3;

    required SharePiece  SharePiece = 4;

    required SignData  Sign = 5;

}

message ConsensusSignPubKeyMessage{
    required bytes GISHash = 1;

    required bytes DummyID = 2;

    required bytes	SignPK  = 3;

    required SignData 	SignData = 4;
}



message StaticGroupInfo{

    required bytes GroupID  = 1;

    required bytes GroupPK  = 2;

    repeated PubKeyInfo  members = 3;

    required ConsensusGroupInitSummary Gis  = 4;

    required uint64 BeginHeight  = 5;
}

message ConsensusGroupInitedMessage{

    required StaticGroupInfo StaticGroupInfo = 1;

    required SignData Sign = 2;
}

message ConsensusCurrentMessage{

    optional bytes GroupID  = 1;

    required bytes PreHash = 2;

    required bytes PreTime = 3;

    required uint64 BlockHeight = 4;

    required SignData Sign = 6;
}

message ConsensusBlockMessageBase{

    required BlockHeader Bh = 1;

    optional bytes	GroupID = 2;

    required SignData	Sign = 3;
}

message ConsensusBlockMessage{
    required Block Block = 1;

    optional bytes GroupID = 2;

    required SignData SignData = 3;
}