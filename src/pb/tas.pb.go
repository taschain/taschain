// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tas.proto

/*
Package tas_pb is a generated protocol buffer package.

It is generated from these files:
	tas.proto

It has these top-level messages:
	Message
	Transaction
	TransactionSlice
	BlockHeader
	Block
	BlockSlice
	BlockMap
*/
package tas_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Code             *uint32 `protobuf:"varint,1,req,name=Code" json:"Code,omitempty"`
	Signature        []byte  `protobuf:"bytes,2,req,name=Signature" json:"Signature,omitempty"`
	Body             []byte  `protobuf:"bytes,3,opt,name=Body" json:"Body,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Message) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Message) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Transaction struct {
	Id               []byte  `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	Data             []byte  `protobuf:"bytes,2,req,name=Data" json:"Data,omitempty"`
	Value            *uint64 `protobuf:"varint,3,req,name=Value" json:"Value,omitempty"`
	Nonce            *uint64 `protobuf:"varint,4,req,name=Nonce" json:"Nonce,omitempty"`
	Source           []byte  `protobuf:"bytes,5,req,name=Source" json:"Source,omitempty"`
	Target           []byte  `protobuf:"bytes,6,req,name=Target" json:"Target,omitempty"`
	GasLimit         *uint64 `protobuf:"varint,7,req,name=GasLimit" json:"GasLimit,omitempty"`
	GasPrice         *uint64 `protobuf:"varint,8,req,name=GasPrice" json:"GasPrice,omitempty"`
	Hash             []byte  `protobuf:"bytes,9,req,name=Hash" json:"Hash,omitempty"`
	ExtraData        []byte  `protobuf:"bytes,10,opt,name=ExtraData" json:"ExtraData,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Transaction) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Transaction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Transaction) GetValue() uint64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Transaction) GetNonce() uint64 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

func (m *Transaction) GetSource() []byte {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Transaction) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Transaction) GetGasLimit() uint64 {
	if m != nil && m.GasLimit != nil {
		return *m.GasLimit
	}
	return 0
}

func (m *Transaction) GetGasPrice() uint64 {
	if m != nil && m.GasPrice != nil {
		return *m.GasPrice
	}
	return 0
}

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetExtraData() []byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}

type TransactionSlice struct {
	Transactions     []*Transaction `protobuf:"bytes,1,rep,name=transactions" json:"transactions,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *TransactionSlice) Reset()                    { *m = TransactionSlice{} }
func (m *TransactionSlice) String() string            { return proto.CompactTextString(m) }
func (*TransactionSlice) ProtoMessage()               {}
func (*TransactionSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TransactionSlice) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type BlockHeader struct {
	Hash             []byte   `protobuf:"bytes,1,req,name=Hash" json:"Hash,omitempty"`
	Height           *uint64  `protobuf:"varint,2,req,name=Height" json:"Height,omitempty"`
	PreHash          []byte   `protobuf:"bytes,3,req,name=PreHash" json:"PreHash,omitempty"`
	PreTime          []byte   `protobuf:"bytes,4,req,name=PreTime" json:"PreTime,omitempty"`
	BlockHeight      *uint64  `protobuf:"varint,5,req,name=BlockHeight" json:"BlockHeight,omitempty"`
	QueueNumber      *uint64  `protobuf:"varint,6,req,name=QueueNumber" json:"QueueNumber,omitempty"`
	CurTime          []byte   `protobuf:"bytes,7,req,name=CurTime" json:"CurTime,omitempty"`
	Castor           []byte   `protobuf:"bytes,8,req,name=Castor" json:"Castor,omitempty"`
	Signature        []byte   `protobuf:"bytes,9,req,name=Signature" json:"Signature,omitempty"`
	Nonce            *uint64  `protobuf:"varint,10,req,name=Nonce" json:"Nonce,omitempty"`
	Transactions     [][]byte `protobuf:"bytes,11,rep,name=transactions" json:"transactions,omitempty"`
	TxTree           []byte   `protobuf:"bytes,12,req,name=TxTree" json:"TxTree,omitempty"`
	ReceiptTree      []byte   `protobuf:"bytes,13,req,name=ReceiptTree" json:"ReceiptTree,omitempty"`
	StateTree        []byte   `protobuf:"bytes,14,req,name=StateTree" json:"StateTree,omitempty"`
	ExtraData        []byte   `protobuf:"bytes,15,req,name=ExtraData" json:"ExtraData,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BlockHeader) Reset()                    { *m = BlockHeader{} }
func (m *BlockHeader) String() string            { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()               {}
func (*BlockHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BlockHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockHeader) GetHeight() uint64 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BlockHeader) GetPreHash() []byte {
	if m != nil {
		return m.PreHash
	}
	return nil
}

func (m *BlockHeader) GetPreTime() []byte {
	if m != nil {
		return m.PreTime
	}
	return nil
}

func (m *BlockHeader) GetBlockHeight() uint64 {
	if m != nil && m.BlockHeight != nil {
		return *m.BlockHeight
	}
	return 0
}

func (m *BlockHeader) GetQueueNumber() uint64 {
	if m != nil && m.QueueNumber != nil {
		return *m.QueueNumber
	}
	return 0
}

func (m *BlockHeader) GetCurTime() []byte {
	if m != nil {
		return m.CurTime
	}
	return nil
}

func (m *BlockHeader) GetCastor() []byte {
	if m != nil {
		return m.Castor
	}
	return nil
}

func (m *BlockHeader) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *BlockHeader) GetNonce() uint64 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

func (m *BlockHeader) GetTransactions() [][]byte {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *BlockHeader) GetTxTree() []byte {
	if m != nil {
		return m.TxTree
	}
	return nil
}

func (m *BlockHeader) GetReceiptTree() []byte {
	if m != nil {
		return m.ReceiptTree
	}
	return nil
}

func (m *BlockHeader) GetStateTree() []byte {
	if m != nil {
		return m.StateTree
	}
	return nil
}

func (m *BlockHeader) GetExtraData() []byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}

type Block struct {
	Header           *BlockHeader   `protobuf:"bytes,1,req,name=Header" json:"Header,omitempty"`
	Transactions     []*Transaction `protobuf:"bytes,2,rep,name=transactions" json:"transactions,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Block) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type BlockSlice struct {
	Blocks           []*Block `protobuf:"bytes,1,rep,name=Blocks" json:"Blocks,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BlockSlice) Reset()                    { *m = BlockSlice{} }
func (m *BlockSlice) String() string            { return proto.CompactTextString(m) }
func (*BlockSlice) ProtoMessage()               {}
func (*BlockSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *BlockSlice) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type BlockMap struct {
	Blocks           map[uint64]*Block `protobuf:"bytes,1,rep,name=Blocks" json:"Blocks,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *BlockMap) Reset()                    { *m = BlockMap{} }
func (m *BlockMap) String() string            { return proto.CompactTextString(m) }
func (*BlockMap) ProtoMessage()               {}
func (*BlockMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BlockMap) GetBlocks() map[uint64]*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "tas.pb.Message")
	proto.RegisterType((*Transaction)(nil), "tas.pb.Transaction")
	proto.RegisterType((*TransactionSlice)(nil), "tas.pb.TransactionSlice")
	proto.RegisterType((*BlockHeader)(nil), "tas.pb.BlockHeader")
	proto.RegisterType((*Block)(nil), "tas.pb.Block")
	proto.RegisterType((*BlockSlice)(nil), "tas.pb.BlockSlice")
	proto.RegisterType((*BlockMap)(nil), "tas.pb.BlockMap")
}

func init() { proto.RegisterFile("tas.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 547 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0x45, 0x1f, 0xfe, 0x1a, 0xcb, 0x69, 0xd8, 0x96, 0xb0, 0x84, 0x1c, 0x84, 0x4a, 0x41, 0x50,
	0xf0, 0xa1, 0x2d, 0xb4, 0xf4, 0x18, 0x37, 0xd4, 0xa1, 0x75, 0x9a, 0xae, 0x4d, 0xef, 0x1b, 0x79,
	0x70, 0x44, 0x6c, 0xcb, 0xac, 0x56, 0x25, 0xfe, 0x0b, 0xfd, 0x37, 0xfd, 0x75, 0xbd, 0x96, 0x9d,
	0x5d, 0xdb, 0x92, 0x73, 0xc9, 0x6d, 0xde, 0x7b, 0xb3, 0x4f, 0xb3, 0xb3, 0x4f, 0xd0, 0xd3, 0xb2,
	0x1c, 0x6e, 0x54, 0xa1, 0x0b, 0xd6, 0xa6, 0xf2, 0x2e, 0xf9, 0x01, 0x9d, 0x09, 0x96, 0xa5, 0x5c,
	0x20, 0x63, 0x10, 0x8e, 0x8a, 0x39, 0x72, 0x2f, 0xf6, 0xd3, 0x81, 0xa0, 0x9a, 0x5d, 0x40, 0x6f,
	0x9a, 0x2f, 0xd6, 0x52, 0x57, 0x0a, 0xb9, 0x1f, 0xfb, 0x69, 0x24, 0x0e, 0x84, 0x39, 0x71, 0x59,
	0xcc, 0xb7, 0x3c, 0x88, 0xbd, 0x34, 0x12, 0x54, 0x27, 0xff, 0x3c, 0xe8, 0xcf, 0x94, 0x5c, 0x97,
	0x32, 0xd3, 0x79, 0xb1, 0x66, 0x27, 0xe0, 0x5f, 0xcf, 0xc9, 0x33, 0x12, 0xfe, 0xf5, 0xdc, 0x9c,
	0xf9, 0x22, 0xb5, 0x74, 0x66, 0x54, 0xb3, 0x57, 0xd0, 0xfa, 0x25, 0x97, 0x15, 0xf2, 0x20, 0xf6,
	0xd3, 0x50, 0x58, 0x60, 0xd8, 0x9b, 0x62, 0x9d, 0x21, 0x0f, 0x2d, 0x4b, 0x80, 0x9d, 0x41, 0x7b,
	0x5a, 0x54, 0x2a, 0x43, 0xde, 0x22, 0x07, 0x87, 0x0c, 0x3f, 0x93, 0x6a, 0x81, 0x9a, 0xb7, 0x2d,
	0x6f, 0x11, 0x3b, 0x87, 0xee, 0x57, 0x59, 0x7e, 0xcf, 0x57, 0xb9, 0xe6, 0x1d, 0x32, 0xda, 0x63,
	0xa7, 0xdd, 0xaa, 0x3c, 0x43, 0xde, 0xdd, 0x6b, 0x84, 0xcd, 0x9c, 0x63, 0x59, 0xde, 0xf3, 0x9e,
	0x9d, 0xd3, 0xd4, 0x66, 0x1b, 0x57, 0x8f, 0x5a, 0x49, 0xba, 0x00, 0xd0, 0xa5, 0x0f, 0x44, 0xf2,
	0x0d, 0x4e, 0x6b, 0x17, 0x9f, 0x2e, 0x8d, 0xcb, 0x47, 0x88, 0xf4, 0x81, 0x2b, 0xb9, 0x17, 0x07,
	0x69, 0xff, 0xdd, 0xcb, 0xa1, 0xdd, 0xfe, 0xb0, 0xd6, 0x2f, 0x1a, 0x8d, 0xc9, 0xdf, 0x00, 0xfa,
	0x97, 0xcb, 0x22, 0x7b, 0x18, 0xa3, 0x9c, 0xa3, 0xda, 0x8f, 0xe3, 0xd5, 0xc6, 0x39, 0x83, 0xf6,
	0x18, 0xf3, 0xc5, 0xbd, 0xa6, 0x65, 0x86, 0xc2, 0x21, 0xc6, 0xa1, 0x73, 0xab, 0x90, 0xda, 0x03,
	0x6a, 0xdf, 0x41, 0xa7, 0xcc, 0xf2, 0x95, 0x5d, 0xaa, 0x55, 0x0c, 0x64, 0xf1, 0xfe, 0x73, 0x64,
	0xd8, 0x22, 0xc3, 0x3a, 0x65, 0x3a, 0x7e, 0x56, 0x58, 0xe1, 0x4d, 0xb5, 0xba, 0x43, 0x45, 0x5b,
	0x0e, 0x45, 0x9d, 0x32, 0xee, 0xa3, 0x4a, 0x91, 0x7b, 0xc7, 0xba, 0x3b, 0x68, 0x26, 0x1d, 0xc9,
	0x52, 0x17, 0x8a, 0xd6, 0x1c, 0x09, 0x87, 0x9a, 0xf1, 0xea, 0x1d, 0xc7, 0x6b, 0x1f, 0x00, 0xa8,
	0x07, 0x20, 0x39, 0x5a, 0x69, 0x3f, 0x0e, 0xd2, 0xa8, 0xb9, 0x3d, 0x0a, 0xc3, 0xe3, 0x4c, 0x21,
	0xf2, 0xc8, 0x85, 0x81, 0x90, 0xb9, 0x83, 0xc0, 0x0c, 0xf3, 0x8d, 0x26, 0x71, 0x40, 0x62, 0x9d,
	0xa2, 0x89, 0xb4, 0xd4, 0x48, 0xfa, 0x89, 0x9b, 0x68, 0x47, 0x34, 0x03, 0xf0, 0xc2, 0xaa, 0x87,
	0x00, 0xac, 0xa0, 0x45, 0x0b, 0x63, 0x6f, 0xcd, 0xc3, 0x98, 0x67, 0xa3, 0xe7, 0xaa, 0xbd, 0x77,
	0xed, 0x45, 0x85, 0x6b, 0x79, 0x12, 0x11, 0xff, 0xb9, 0x11, 0x79, 0x0f, 0x40, 0x7e, 0x36, 0x69,
	0x6f, 0xa0, 0x4d, 0x68, 0x97, 0xb1, 0x41, 0xe3, 0x9b, 0xc2, 0x89, 0xc9, 0x1f, 0x0f, 0xba, 0x54,
	0x4e, 0xe4, 0x86, 0x7d, 0x38, 0x3a, 0x73, 0xd1, 0x38, 0x33, 0x91, 0x1b, 0x5b, 0x94, 0x57, 0x6b,
	0xad, 0xb6, 0x3b, 0x8b, 0xf3, 0xb1, 0x8b, 0x8a, 0xa5, 0xd9, 0x29, 0x04, 0x0f, 0xb8, 0xe5, 0x5e,
	0xec, 0xa5, 0xa1, 0x30, 0x25, 0x7b, 0x0d, 0xad, 0xdf, 0xf4, 0x3b, 0xfb, 0xb1, 0xf7, 0x74, 0x12,
	0xab, 0x7d, 0xf6, 0x3f, 0x79, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x69, 0x2a, 0xba, 0xc6, 0x90,
	0x04, 0x00, 0x00,
}
